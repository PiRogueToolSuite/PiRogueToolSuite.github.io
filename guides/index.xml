<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Learning materials on</title><link>/guides/</link><description>Recent content in Learning materials on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="/guides/index.xml" rel="self" type="application/rss+xml"/><item><title>Beginner guide - How to setup a PiRogue</title><link>/guides/g1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/guides/g1/</guid><description>PiRogue tool suite (PTS) is an open-source tool suite that provides a comprehensive mobile forensic and network traffic analysis platform targeting mobile devices both Android and iOS, internet of things devices (devices that are connected to the user mobile apps), and in general any device using wi-fi to connect to the Internet.
Main PiRogue capabilities # The PiRogue is an open hardware device based on a Raspberry Pi operating as a network router (like any ISP router) analyzing network traffic in real time.</description></item><item><title>Beginner guide - How to capture and analyze device's network traffic</title><link>/guides/g2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/guides/g2/</guid><description>To begin, let&amp;rsquo;s explain first what we are doing here:
We will be using the PiRogue as a network router. A network router is a device that facilitates communication between the internet and the devices in your home that connect to the internet. As its name implies, it &amp;ldquo;routes&amp;rdquo; traffic between devices and other networks, such as the internet. The PiRogue functions similarly to your ISP&amp;rsquo;s router, allowing you to connect from one network to another by plugging it into the router using an Ethernet cable.</description></item><item><title>Beginner guide - How to handle a potentially malicious mobile app</title><link>/guides/g3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/guides/g3/</guid><description>On a daily basis, we encounter potentially malicious applications in various forms. They can appear as seemingly harmless apps we intend to download from Google Play (although it&amp;rsquo;s rare &amp;ndash; Google usually takes them down), or they may be disguised as links or APK files shared within chat groups, especially if we are human rights defenders operating in a high-surveillance environment. Additionally, these malicious applications can be found on compromised devices.</description></item><item><title>Beginner guide - How to backup a mobile device for forensic analysis purpose</title><link>/guides/g4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/guides/g4/</guid><description>Creating a backup of a mobile device is a crucial and standard procedure in forensic analysis. It provides us with a secure and unaltered copy of the data, enabling a thorough and reliable investigation.
The backup ensures that we have a copy of the data that can be analyzed without affecting the original evidence of a potentially compromised device. Mobile device backups contain a partial copy of the filesystem, including user data and service databases.</description></item><item><title>Intermediate guide - How to statically analyze a potentially malicious Android app</title><link>/guides/g5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/guides/g5/</guid><description>Introduction # Static analysis is a crucial technique in the realm of Android application reverse engineering. It involves examining the application&amp;rsquo;s code and resources without actually executing it. This approach allows for the identification of potential vulnerabilities, malicious code, and hidden functionalities that could pose a threat to users&amp;rsquo; privacy and security.
This guide delves into the intricacies of conducting static analysis on suspicious Android applications. It elucidates the key technical aspects to be scrutinized and investigated, empowering reverse engineers and security professionals to effectively assess potential risks.</description></item><item><title>Intermediate guide - How to handle a potentially compromised device</title><link>/guides/g6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/guides/g6/</guid><description>Objective # To provide comprehensive step-by-step guide for identifying and handling potentially compromised mobile devices.
Introduction # Mobile devices have become an integral part of our daily lives, seamlessly integrating into our personal and professional spheres. However, this increased reliance on mobile devices also raises concerns about cybersecurity, as these devices are often targets for cyber-attacks.
It is crucial to ensure that organization&amp;rsquo;s mobile devices are secure and that we have proper procedures in place to handle potentially compromised devices.</description></item><item><title>ðŸš§ Intermediate guide - How to use MVT to conduct the analysis of a mobile device and its backup image</title><link>/guides/g7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/guides/g7/</guid><description>Coming soon</description></item><item><title>Advanced guide - How to use PTS to intercept the TLS and cleartext network traffic of an app</title><link>/guides/g8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/guides/g8/</guid><description>Objective # The objective of this guide is to provide a step-by-step procedure allowing you to intercept and decrypt the TLS traffic of an Android application using PiRogue capabilities.
Mobile application dynamic analysis # Mobile application dynamic analysis is a sophisticated approach to evaluating the behavior of mobile apps while they are actively running on a real device or an emulator. Unlike static analysis, which examines the app&amp;rsquo;s code without executing it, dynamic analysis observes the app&amp;rsquo;s actions and interactions in real-time, providing a deeper understanding of its runtime behavior and potential security vulnerabilities.</description></item><item><title>ðŸš§ Advanced guide - How to use PTS to analyze the network traffic of an app to expose potential data collection or data exfiltration</title><link>/guides/g9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/guides/g9/</guid><description>Coming soon</description></item><item><title>Advanced guide - Mobile application regulatory compliance audit methodology</title><link>/guides/g10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/guides/g10/</guid><description>Objective # This document describes the methodology that we propose that you follow when conducting a regulatory compliance audit of an Android application. This methodology is based on NOYB&amp;rsquo;s methodology. In the context of a regulatory compliance audit, it is crucial to ensure that the execution environment is reproducible and that the analyzed application is uniquely identified.
Main principles # Planning and preparation # Scope definition # The initial step involves defining clearly the scope of the audit.</description></item></channel></rss>