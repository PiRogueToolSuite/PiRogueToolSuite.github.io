<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Colander on</title><link>/docs/colander/</link><description>Recent content in Colander on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Sat, 30 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="/docs/colander/index.xml" rel="self" type="application/rss+xml"/><item><title>Overview</title><link>/docs/colander/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/colander/overview/</guid><description>Colander web platform is a case and incident response management platform that integrates seamlessly with the hardware and software components. Colander provides a centralized hub for managing investigations, streamlining workflows, and enabling effective collaboration among team members.
Knowledge management: Colander facilitates the organization and sharing of investigative knowledge, ensuring that insights are readily available to team members, promoting collaboration and efficiency.
Artifact management: Colander streamlines the handling and preservation of digital evidence, maintaining chain of custody and ensuring admissibility in legal proceedings.</description></item><item><title>Architecture</title><link>/docs/colander/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/colander/architecture/</guid><description>Colander relies on different services:
colander-postgres: Postgres database colander-front: Gunicorn serving the pages of Colander colander-worker: Django Q2 cluster of workers traefik: Traefik reverse proxy ensuring TLS termination and routing cyberchef: CyberChef instance playwright: service using Playwright to take URL screenshot and capture the HAR elasticsearch: single node ElasticSearch server storing network traffic analysis minio: Minio S3-compatible object storage to store artifacts redis: Redis server ensuring the communication between the front and the workers for both Colander and Threatr watchtower: Watchtower service keeping the stack up to date Colander comes with Threatr which relies on:</description></item><item><title>Deployment</title><link>/docs/colander/deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/colander/deployment/</guid><description>Colander official Docker image is available on GitHub. The stack we provide comes with the service Watchtower that will automatically update the version of Colander you deployed.
Requirements # We suggest to use a dedicated server with at least:
4 cores 4GB of RAM 500GB of storage space We recommend to install Debian as is the operating system we know, and we will be able to guide you through all different steps for installation, maintenance and debugging.</description></item><item><title>Graphical interface</title><link>/docs/colander/graphical-interface/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/colander/graphical-interface/</guid><description>The graphical interface of Colander allows to navigate through the different workspaces as well as easily switching from one case to another or quickly searching for entities within a selected case or within all the userâ€™s cases.
The graphical interface changes depending on a case as been selected or not. When no case is selected, the quick search bar will apply to all the cases the user has access to. In this mode, only 2 workspaces are accessible:</description></item><item><title>Account administration</title><link>/docs/colander/account-administration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/colander/account-administration/</guid><description>Administrator account # Once Colander is deployed and running, the system administrator has to create a first account with administrative rights for both Colander and Threatr. To do so, the system administrator has to run the following command on the server running Colander:
docker compose -f no-sso.yml run --rm colander-front python manage.py createsuperuser docker compose -f no-sso.yml run --rm threatr-front python manage.py createsuperuser Those credentials have to be securely stored and must not be shared.</description></item><item><title>Collaboration</title><link>/docs/colander/collaboration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/colander/collaboration/</guid><description>Teams # Teams in Colander are the only way to share cases with other users. To create a team, go in Colander &amp;gt; Collaborate &amp;gt; Teams and give a name.
Team creation form Once created, click on Details to add a contributor. Since a Colander instance can host multiple users from different organizations, users cannot search for another user by their name. Instead, the owner of the team has to ask other users for their Contributor ID.</description></item><item><title>Case management</title><link>/docs/colander/case-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/colander/case-management/</guid><description>In the context of digital investigation, the effective organization and management of cases are imperative. As a digital investigator you focus on documenting incident, the utilization of Colander serves as a comprehensive platform to streamline and document investigative efforts. This document explain how to use Colander for organizing and managing digital investigation cases.
Case management # Case management is the overarching framework that organizes and oversees the entire digital investigation process, from the initial identification of a potential crime or incident to the final report and resolution.</description></item><item><title>Knowledge management</title><link>/docs/colander/knowledge-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/colander/knowledge-management/</guid><description>Knowledge management is an ongoing process of capturing, organizing, and sharing the knowledge and expertise gained from digital investigations. It aims to create a repository of best practices, guidelines, and case studies that can be leveraged by future investigators to improve their investigative techniques and decision-making processes.
Knowledge repository # A central knowledge repository serves as the storage and organization hub for digital evidence, case files, investigative techniques, and lessons learned from past investigations.</description></item><item><title>Knowledge graph</title><link>/docs/colander/knowledge-graph/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/colander/knowledge-graph/</guid><description>In the realm of digital investigations, where the volume and complexity of data can be overwhelming, knowledge graphs emerge as a sophisticated tool for organizing, analyzing, and extracting meaningful insights. These structured representations of knowledge, akin to semantic networks, connect entities and their interrelationships, providing a cohesive framework for comprehending the intricacies of digital environments.
At the heart of knowledge graphs lies a network of interconnected nodes, each representing a distinct entity.</description></item><item><title>ðŸš§ External sources</title><link>/docs/colander/external-sources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/colander/external-sources/</guid><description/></item></channel></rss>